name: 'Deploy SSIS Packages'
description: 'Creates SSIS catalog/folders if needed and deploys SSIS packages using dtutil.exe'

inputs:
  sql_server_host:
    description: 'SQL Server host'
    required: true
  sql_admin_user:
    description: 'SQL Server admin user'
    required: true
  sql_admin_password:
    description: 'SQL Server admin password'
    required: true
  package_path:
    description: 'Path to the SSIS package (.dtsx) in the repository'
    required: true
  folder_name:
    description: 'Folder name in SSIS Catalog (e.g., ETL)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create SSIS Catalog Folder if not exists
      shell: powershell
      run: |
        $sqlcmdPath = "sqlcmd"
        $sql_server = "${{ inputs.sql_server_host }}"
        $sql_user = "${{ inputs.sql_admin_user }}"
        $sql_password = "${{ inputs.sql_admin_password }}"
        $folder_name = "${{ inputs.folder_name }}"

        $script = @"
IF NOT EXISTS (SELECT * FROM ssisdb.catalog.folders WHERE name = '$folder_name')
BEGIN
    EXEC ssisdb.catalog.create_folder @folder_name = N'$folder_name', @folder_description = N'Created by GitHub Actions';
END
"@

        & $sqlcmdPath -S $sql_server -U $sql_user -P $sql_password -d SSISDB -Q $script

    - name: Deploy SSIS Package
      shell: powershell
      run: |
        $dtutilPath = "C:\Program Files\Microsoft SQL Server\160\DTS\Binn\dtutil.exe"
        $env:Path += ";C:\Program Files\Microsoft SQL Server\160\DTS\Binn"

        if (-not (Test-Path $dtutilPath)) { throw "dtutil.exe not found at $dtutilPath. Ensure SSIS for SQL Server 2022 is installed." }
        if (-not (Test-Path "${{ inputs.package_path }}")) { throw "SSIS package not found at ${{ inputs.package_path }}" }

        & $dtutilPath /Copy "SQL;SSISDB\${{ inputs.folder_name }}" /DestServer "${{ inputs.sql_server_host }}" /File "${{ inputs.package_path }}"
