name: 'Deploy SSIS Packages'
description: 'Creates folder in SSIS Catalog (SSISDB) if needed and deploys SSIS project (.ispac) using PowerShell'

inputs:
  sql_server_host:
    description: 'SQL Server host'
    required: true
  package_path:
    description: 'Path to the SSIS project (.ispac) in the repository'
    required: true
  folder_path:
    description: 'Folder path in SSISDB (e.g., SSISDB\ETL)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy SSIS Package
      shell: powershell
      run: |
        # Validate SqlServer module
        if (-not (Get-Module -ListAvailable -Name SqlServer)) { throw "SqlServer PowerShell module not found. Install it on the runner." }

        $ispacPath = "${{ inputs.package_path }}"
        $sqlServer = "${{ inputs.sql_server_host }}"
        $catalogFolder = "${{ inputs.folder_path }}"

        # Validate .ispac file
        if (-not (Test-Path $ispacPath)) { throw "ISPAC file not found at $ispacPath" }

        # Load Integration Services assembly
        [System.Reflection.Assembly]::LoadWithPartialName("Microsoft.SqlServer.Management.IntegrationServices") | Out-Null

        # Connect to SQL Server
        $connectionString = "Data Source=$sqlServer;Integrated Security=True;"
        $sqlConnection = New-Object System.Data.SqlClient.SqlConnection $connectionString
        $integrationServices = New-Object Microsoft.SqlServer.Management.IntegrationServices.IntegrationServices $sqlConnection

        # Get or create SSISDB catalog
        $catalog = $integrationServices.Catalogs["SSISDB"]
        if (-not $catalog) { throw "SSISDB catalog not found on $sqlServer. Ensure the SSIS Catalog is enabled." }

        # Extract folder name (e.g., SSISDB\ETL -> ETL)
        $folderName = $catalogFolder.Split('\')[-1]

        # Create or get folder
        $folder = $catalog.Folders[$folderName]
        if (-not $folder) {
          Write-Host "Creating folder $folderName in SSISDB"
          $folder = New-Object Microsoft.SqlServer.Management.IntegrationServices.CatalogFolder($catalog, $folderName, $folderName)
          $folder.Create()
        }

        # Deploy the project
        Write-Host "Deploying project from $ispacPath to SSISDB\$folderName"
        $projectName = [System.IO.Path]::GetFileNameWithoutExtension($ispacPath)
        $projectBytes = [System.IO.File]::ReadAllBytes($ispacPath)
        $folder.DeployProject($projectName, $projectBytes)
        Write-Host "Successfully deployed project $projectName to SSISDB\$folderName"
