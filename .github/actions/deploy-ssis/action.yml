name: Deploy SSIS Packages to SQL Server

on:
  workflow_dispatch:

jobs:
  deploy-ssis:
    runs-on: self-hosted
    environment: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug workspace and user
        shell: powershell
        run: |
          Write-Output "Workspace path: ${{ github.workspace }}"
          Write-Output "Current user: $env:USERDOMAIN\$env:USERNAME"
          Get-ChildItem -Path "${{ github.workspace }}" -Recurse

      - name: Verify SSIS project file exists
        shell: powershell
        run: |
          $projectPath = "${{ github.workspace }}\HandsOnProject\Timesheets"
          if (-not (Test-Path "$projectPath\Integration Services Project1.dtproj")) {
            Write-Error "SSIS project file not found at: $projectPath"
            exit 1
          }
          Write-Output "Found SSIS project file at $projectPath"

      - name: Verify SSIS build tools exist
        shell: powershell
        run: |
          if (-not (Test-Path "C:\SSISDevOpsTools\SSISBuild.exe")) {
            Write-Error "SSISBuild.exe not found in C:\SSISDevOpsTools"
            exit 1
          }
          if (-not (Test-Path "C:\Program Files\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe")) {
            Write-Error "ISDeploymentWizard.exe not found"
            exit 1
          }
          if (-not (Get-Command sqlcmd.exe -ErrorAction SilentlyContinue)) {
            Write-Error "sqlcmd.exe not found"
            exit 1
          }
          Write-Output "All required tools found."

      - name: Build and Deploy SSIS Project
        uses: ./.github/actions/deploy-ssis
        with:
          sql_server: ${{ secrets.DEV_SQL_SERVER_HOST }}
          catalog_db: 'SSISDB'
          folder_name: 'TimesheetMigration'
          project_name: 'Integration Services Project1'
          project_file: '${{ github.workspace }}\HandsOnProject\Timesheets\Integration Services Project1.dtproj'
          config: 'Development'

      - name: Debug Secret (Optional)
        if: failure()
        shell: bash
        run: |
          echo "Server: ${{ secrets.DEV_SQL_SERVER_HOST }}" | sed 's/./*/g'
