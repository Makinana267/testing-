name: Deploy SSIS Package

on:
  workflow_dispatch:

jobs:
  deploy-ssis:
    runs-on: windows-latest

    env:
      SQL_SERVER: ${{ secrets.SQL_SERVER }}
      SQL_PORT: ${{ secrets.SQL_PORT }}
      SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
      SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
      SSIS_ISPAC_PATH: ssis/TimesheetETL.ispac
      SSIS_FOLDER_NAME: TimesheetETL
      SSIS_PROJECT_NAME: TimesheetETL

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SQL Server PowerShell Modules
        run: |
          Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
          Install-Module -Name SqlServer -Force -Scope CurrentUser
        shell: powershell

      - name: Deploy SSIS Package
        run: |
          Import-Module SqlServer
          Add-Type -AssemblyName "Microsoft.SqlServer.Management.IntegrationServices"

          $server = "${{ env.SQL_SERVER }}"
          $port = "${{ env.SQL_PORT }}"
          $user = "${{ env.SQL_USERNAME }}"
          $pass = "${{ env.SQL_PASSWORD }}"
          $project = "${{ env.SSIS_PROJECT_NAME }}"
          $folder = "${{ env.SSIS_FOLDER_NAME }}"
          $ispac = "${{ github.workspace }}\${{ env.SSIS_ISPAC_PATH }}"

          $connString = "Data Source=$server,$port;Initial Catalog=master;User ID=$user;Password=$pass;TrustServerCertificate=True;"
          $sqlConn = New-Object System.Data.SqlClient.SqlConnection($connString)
          $ssis = New-Object Microsoft.SqlServer.Management.IntegrationServices.IntegrationServices($sqlConn)
          $catalog = $ssis.Catalogs["SSISDB"]

          if (-not $catalog) {
            Write-Error "SSISDB catalog not found!"
            exit 1
          }

          $existingFolder = $catalog.Folders[$folder]
          if (-not $existingFolder) {
            $existingFolder = New-Object Microsoft.SqlServer.Management.IntegrationServices.CatalogFolder($catalog, $folder, "Auto-created")
            $existingFolder.Create()
          }

          $projectBytes = [System.IO.File]::ReadAllBytes($ispac)
          $existingFolder.DeployProject($project, $projectBytes)
          Write-Host " Deployment completed"
        shell: powershell
