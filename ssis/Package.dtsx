<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/12/2025 1:48:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-66HI94H2"
  DTS:CreatorName="LAPTOP-66HI94H2\IviweMakinana"
  DTS:DTSID="{8F8988DD-D0F2-4C4B-8142-3B498376A8B6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="73"
  DTS:VersionGUID="{00E51FEB-B918-4420-8FAB-7C1E1FB837A3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{881780A7-DF34-4333-8671-15AB8765C6C6}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FullFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{CA949CA3-D781-4831-8678-A6D0DA37D0E5}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::RootFolder]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Timesheet\Evashan\;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{E48AA08E-F9FB-49CA-BBFE-AB247C9F10BC}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::RootFolder]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Timesheet\Evashan\;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 3]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{6087197F-4CA6-4BA5-903E-E415360929F1}"
      DTS:ObjectName="Excel Connection Manager 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Timesheet\Evashan\Evashan Govender April Final Week Timesheet.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 4]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{A23AC414-FA2A-403A-8B42-00BB62335A29}"
      DTS:ObjectName="Excel Connection Manager 4">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=Evashan;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B4C0ED7A-E6D4-4A94-B295-68505A5E0543}"
      DTS:ObjectName="LocalHost.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Leaves-{B4C0ED7A-E6D4-4A94-B295-68505A5E0543}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{A8FA8255-09F7-4BD5-9C2D-9829FD43605D}"
      DTS:ObjectName="LocalHost.TimesheetDB 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{A8FA8255-09F7-4BD5-9C2D-9829FD43605D}LocalHost.TimesheetDB 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0158DCF8-04DA-4C32-BB77-921DDFE5EEAA}"
      DTS:ObjectName="LocalHost.TimesheetDB 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{0158DCF8-04DA-4C32-BB77-921DDFE5EEAA}LocalHost.TimesheetDB 2;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{369D2BE2-2146-477D-8145-7FFBF1E367AA}"
      DTS:ObjectName="LocalHost.TimesheetDB 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{369D2BE2-2146-477D-8145-7FFBF1E367AA}LocalHost.TimesheetDB 3;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B99B7680-0543-4307-AA80-5450563600A5}"
      DTS:ObjectName="LocalHost.TimesheetDB 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{B99B7680-0543-4307-AA80-5450563600A5}LocalHost.TimesheetDB 4;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 5]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BC74F06B-ABEA-46EC-9860-1C6931636721}"
      DTS:ObjectName="LocalHost.TimesheetDB 5">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{BC74F06B-ABEA-46EC-9860-1C6931636721}LocalHost.TimesheetDB 5;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{148A1927-7D23-4135-A5B6-A600FABAEEAD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74F9FB88-9FE4-4329-8451-68F370752B54}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(&#xA;  LEFT(@[User::RootFolder], LEN(@[User::RootFolder]) - FINDSTRING(REVERSE(@[User::RootFolder]), &quot;\\&quot;, 1)),&#xA;  FINDSTRING(REVERSE(LEFT(@[User::RootFolder], LEN(@[User::RootFolder]) - FINDSTRING(REVERSE(@[User::RootFolder]), &quot;\\&quot;, 1))), &quot;\\&quot;, 1) - 1&#xA;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">Evashan</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCDA758E-50C7-434F-AAB9-D274DCB0C489}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B45ADF7E-CDEB-4CFF-B450-8B721038C935}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Timesheet\Evashan\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0933AED-F653-4F44-9F32-80DD6AE3E4A1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RowKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{e4e8f330-e187-4f0b-9051-8f167a6ff31d}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{2f039626-2444-498e-847c-920fc5e5a9fa}"
        DTS:ObjectName="{05B7E694-DF9A-484B-8674-B501E0646B98}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Timesheet\" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{7e87638b-a405-4ed5-a16c-5bfbe058ba59}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[CleanLeaveType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CleanLeaveType"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanLeaveType]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[CleanEndDate]"
                          cachedDataType="date"
                          cachedName="CleanEndDate"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanEndDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanLeaveType]}) || [LEN](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanLeaveType]}) == 0 || [LEN](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanLeaveType]}) &gt; 50</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(CleanLeaveType) || LEN(CleanLeaveType) == 0 || LEN(CleanLeaveType) &gt; 50</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 2]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 2"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanEndDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(CleanEndDate)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                          name="Copy of Type of Leave"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          name="Copy of Start Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          name="Copy of End Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                          name="Copy of Number of days"
                          precision="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                          name="Copy of Approval Obtained"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                          name="Copy of Sick Note"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input].Columns[Copy of End Date]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanLeaveType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanLeaveType]"
                          name="CleanLeaveType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM([Copy of Type of Leave])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanEndDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanEndDate]"
                          name="CleanEndDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DATE)#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DATE)[Copy of End Date]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Expense Claim$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Leave$A10:F]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 4]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 4]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          name="Type of Leave"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          name="Start Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          name="Number of days "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          name="Approval Obtained"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          name="Sick Note"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          dataType="wstr"
                          length="255"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="wstr"
                          length="255"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          dataType="r8"
                          name="Number of days " />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="Fuzzy Lookup"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0.5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_Email_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Start Date]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Start Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of End Date]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of End Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Number of days]"
                          cachedDataType="numeric"
                          cachedName="Copy of Number of days"
                          cachedPrecision="18"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Approval Obtained]"
                          cachedDataType="bool"
                          cachedName="Copy of Approval Obtained"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Sick Note]"
                          cachedDataType="bool"
                          cachedName="Copy of Sick Note"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EmployeeName"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[CleanLeaveType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CleanLeaveType"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanLeaveType]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[CleanEndDate]"
                          cachedDataType="date"
                          cachedName="CleanEndDate"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanEndDate]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          name="Type of Leave">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          name="Start Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          name="End Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          name="Number of days">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          name="Approval Obtained">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          name="Sick Note">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]"
                          name="Copy of Type of Leave">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]"
                          name="Copy of Start Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]"
                          name="Copy of End Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]"
                          name="Copy of Number of days"
                          precision="18">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]"
                          name="Copy of Approval Obtained">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]"
                          name="Copy of Sick Note">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                          name="EmployeeName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanLeaveType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanLeaveType]"
                          name="CleanLeaveType">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanLeaveType]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanEndDate]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[CleanEndDate]"
                          name="CleanEndDate">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CleanEndDate]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          name="ConsultantID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantID</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;DerivedColumn 1&quot;."
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                          name="_Similarity_EmployeeName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[LeaveRecords]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Type of Leave"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Date]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Number of days]"
                          cachedDataType="numeric"
                          cachedName="Copy of Number of days"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Number of days]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Approval Obtained]"
                          cachedDataType="bool"
                          cachedName="Copy of Approval Obtained"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Sick Note]"
                          cachedDataType="bool"
                          cachedName="Copy of Sick Note"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Sick Note]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Date]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Start Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Date]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                          dataType="wstr"
                          length="50"
                          name="LeaveType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="wstr"
                          length="10"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="wstr"
                          length="10"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="numeric"
                          name="NumberOfDays"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          dataType="bool"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          dataType="bool"
                          name="SickNote" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressDuringLeave]"
                          dataType="wstr"
                          length="255"
                          name="AddressDuringLeave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Conditional Split Default Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Conditional Split Default Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Fuzzy Lookup Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B66CA92C-8664-4DEC-8A38-73028D7C74B7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) " +
"VALUES ('Change', '" + @[System::PackageName] + "', 'Clients', 0, GETDATE(), '" + @[System::MachineName] + "', '" + @[User::FileName] + "', '" + @[User::RootFolder] + "')"</DTS:PropertyExpression>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Execute SQL Task.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{45C1CF56-4989-4C27-BF4D-AEBC7D83CF87}"
              DTS:EventID="6357100"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{FFFED85D-5140-475B-BC41-9BDD07E4615E}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BC74F06B-ABEA-46EC-9860-1C6931636721}"
              SQLTask:SqlStatementSource="INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) VALUES ('Change', 'Package', 'Clients', 0, GETDATE(), 'LAPTOP-66HI94H2', 'Evashan', 'C:\Timesheet\Evashan\')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Execute SQL Task 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{48c73173-b29c-40b1-ac54-3032fe2cb434}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) " +
"VALUES ('Change', '" + @[System::PackageName] + "', 'Clients', 0, GETDATE(), '" + @[System::MachineName] + "', '" + @[User::FileName] + "', '" + @[User::RootFolder] + "')"</DTS:PropertyExpression>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Execute SQL Task 1.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{37D2EB35-2930-4CAF-9D19-274DDC2FC994}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{278AEA26-7403-4F1E-A24A-E68BCBD7C7DA}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach Loop Container\Execute SQL Task 1.EventHandlers[OnError]\Execute SQL Task 3"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{59e850df-2a45-4675-a7f5-0b1c9e6b30f3}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Execute SQL Task 3"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) " +
"VALUES ('Failed', '" + @[System::PackageName] + "', 'Clients', 0, GETDATE(), '" + @[System::MachineName] + "', '" + @[User::FileName] + "', '" + @[User::RootFolder] + "')"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{BC74F06B-ABEA-46EC-9860-1C6931636721}"
                      SQLTask:SqlStatementSource="INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) VALUES ('Failed', 'Package', 'Clients', 0, GETDATE(), 'LAPTOP-66HI94H2', 'Evashan', 'C:\Timesheet\Evashan\')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BC74F06B-ABEA-46EC-9860-1C6931636721}"
              SQLTask:SqlStatementSource="INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) VALUES ('Change', 'Package', 'Clients', 0, GETDATE(), 'LAPTOP-66HI94H2', 'Evashan', 'C:\Timesheet\Evashan\')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{2FC47051-86B4-40FB-937A-B93C37D72920}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a846dd55e84e467dab68a46eee0d0645"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FullFilePath"
              ReadWriteVariables="User::FileName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a846dd55e84e467dab68a46eee0d0645.Properties.Settings.get_Default():ST_a846dd55e84e467dab68a46eee0d0645.Properties.Sett" +
    "ings")]

namespace ST_a846dd55e84e467dab68a46eee0d0645.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_a846dd55e84e467dab68a46eee0d0645
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		

        public void Main()
        {
            string filePath = Dts.Variables["User::FullFilePath"].Value.ToString();
            string consultantName = System.IO.Path.GetFileName(System.IO.Path.GetDirectoryName(filePath));

            Dts.Variables["User::FileName"].Value = consultantName;
            MessageBox.Show("Current Excel File Path:\n" + filePath, "Debug: File Path");
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_a846dd55e84e467dab68a46eee0d0645.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{31b79517-eef9-4261-9390-f33e2e8ca875}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a846dd55e84e467dab68a46eee0d0645</RootNamespace>
    <AssemblyName>ST_a846dd55e84e467dab68a46eee0d0645</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a846dd55e84e467dab68a46eee0d0645</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a846dd55e84e467dab68a46eee0d0645</msb:DisplayName>
    <msb:ProjectId>{5D398A99-87E4-401A-8CC2-0C606215C551}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a846dd55e84e467dab68a46eee0d0645.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a846dd55e84e467dab68a46eee0d0645")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_a846dd55e84e467dab68a46eee0d0645")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a846dd55e84e467dab68a46eee0d0645.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a846dd55e84e467dab68a46eee0d0645.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a846dd55e84e467dab68a46eee0d0645.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a846dd55e84e467dab68a46eee0d0645.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a846dd55e84e467dab68a46eee0d0645.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_a846dd55e84e467dab68a46eee0d0645.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHmmWmgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAHi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwuAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LwAAAAAAAEgAAAACAAUALCEAAOgMAAABAAAAAAAAABQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBqAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKBigVAAAKKBYAAAoLAigQAAAKbxEAAApyJwAAcG8SAAAKB28XAAAKckUAAHAGKBgA
AApyeQAAcCgZAAAKJgIoEAAAChZvGgAACioeAigbAAAKKh4CKBwAAAoqrn4BAAAELR5ymwAAcNAD
AAACKB0AAApvHgAACnMfAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoIAAA
CioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBAAAI34A
AHQEAADMBQAAI1N0cmluZ3MAAAAAQAoAABABAAAjVVMAUAsAABAAAAAjR1VJRAAAAGALAACIAQAA
I0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIQAAAAUAAAAGAAAACQAAAAEAAAAg
AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAqwMBAAAAAAAGAEwC
ewQGANsCewQGAJgBaAQPAO8EAAAGAMUBKQQGAC8CKQQGABACKQQGAMICKQQGAGwCKQQGAIUCKQQG
ANwBKQQGAPcBEwMKAKACWgMKABcBWgMGAOMD3AMGAHsBaAQGAH4F3AMGAEsEmwQGADsEFAQOAEsB
lQMOAKwBlQMOADMB/wMGAGABewQKAIMDWgMSADEFwgASAHgAwgAGADYDLgAGAC8D3AMWALIFRAUW
AJEFRAUGAOIA3AMGAIEA3AMGAMEFKQQAAAAAJQAAAAAAAQABAAEAEAD0AwEAOQABAAEAAAAQAKIE
/gRFAAEAAwAAARAAOwX+BFkAAwAHAAMBAABpBQAAPQAEAAoAEQDoA4EAEQAHAYUAEQBoAIkABgZX
AI0AVoBZBZAAVoDnAJAAUCAAAAAAhgD6AwYAAQDGIAAAAACGGFsEBgABAM4gAAAAAIMYWwQGAAEA
1iAAAAAAkwhHBJQAAQACIQAAAACTCO8AmQABAAkhAAAAAJMI+wCeAAEAESEAAAAAlgiFBaQAAgAY
IQAAAACGGFsEBgACACAhAAAAAJEYYQSpAAIAAAABAA0DCQBbBAEAEQBbBAYAGQBbBAoAKQBbBBAA
MQBbBBAAOQBbBBAAQQBbBBAASQBbBBAAUQBbBBAAWQBbBBAAYQBbBBAAaQBbBAYAgQBbBAYAqQBb
BBUAuQBbBAYAcQBhBSAAwQAtBSUAyQDTAyoA0QD5AjAAiQAtAzQA2QCxADgA2QClADgA0QADAz0A
4QB3BUIA6QCtBUgAwQCeBQEAcQBbBAYAiQBbBAYA+QCTAE8A+QC9BVcAkQBbBF0AsQBbBAYACAAU
AHcACAAYAHwAKQBzAOQALgALALwALgATAMUALgAbAOQALgAjAO0ALgArABYBLgAzABYBLgA7ABwB
LgBDAO0ALgBLACQBLgBTABYBLgBbAD0BQwBjAHwASQBzAOQAYQB7AHwAYwBrAHwAGwADAAEABAAD
AAAASwStAAAADwGyAAAAiQW3AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAWiQMbAAA
AAAAAAEAAAAEAAAAAAAAAAAAAABlAF8AAAAAABAAAAAAAAAAAAAAAG4AOwMAAAAABAAAAAAAAAAA
AAAAZQDcAwAAAAAQAAAAAAAAAAAAAABuADgAAAAAAAQAAAAAAAAAAAAAAGUARAUAAAAAAAAAAAEA
AACsBAAABQACAAAAAAAAU1RfYTg0NmRkNTVlODRlNDY3ZGFiNjhhNDZlZWUwZDA2NDUAPE1vZHVs
ZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBHZXRGaWxlTmFtZQBHZXREaXJlY3RvcnlOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9hODQ2ZGQ1NWU4NGU0
NjdkYWI2OGE0NmVlZTBkMDY0NS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3Rv
cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNUX2E4NDZkZDU1ZTg0ZTQ2N2RhYjY4YTQ2ZWVlMGQwNjQ1LlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9hODQ2ZGQ1NWU4NGU0Njdk
YWI2OGE0NmVlZTBkMDY0NS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVt
LldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVj
dABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU2hvdwBNZXNzYWdlQm94
AGdldF9Bc3NlbWJseQAAAAAlVQBzAGUAcgA6ADoARgB1AGwAbABGAGkAbABlAFAAYQB0AGgAAB1V
AHMAZQByADoAOgBGAGkAbABlAE4AYQBtAGUAADNDAHUAcgByAGUAbgB0ACAARQB4AGMAZQBsACAA
RgBpAGwAZQAgAFAAYQB0AGgAOgAKAAAhRABlAGIAdQBnADoAIABGAGkAbABlACAAUABhAHQAaAAA
cVMAVABfAGEAOAA0ADYAZABkADUANQBlADgANABlADQANgA3AGQAYQBiADYAOABhADQANgBlAGUA
ZQAwAGQAMAA2ADQANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AAAAbxuqS/qCSUeAx9raL3c/hQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQHAg4OBCAAEmEE
IAASZQUgARJpHAMgABwDIAAOBAABDg4EIAEBHAUAAg4ODgYAAhF5Dg4HAAESfRGAgQUgABKAhQcg
AgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAAS
SQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hODQ2ZGQ1NWU4NGU0NjdkYWI2OGE0
NmVlZTBkMDY0NQAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPQuAAAAAAAAAAAAAA4vAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAALwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACIEAAAAAAAAAAAAACIENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAMbFokAAABAAxsWiQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASCAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABeAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBhADgANAA2AGQAZAA1ADUAZQA4ADQAZQA0ADYANwBkAGEAYgA2ADgAYQA0
ADYAZQBlAGUAMABkADAANgA0ADUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAzADAANgAuADIANwA2ADYAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBhADgANAA2AGQAZAA1ADUAZQA4ADQAZQA0ADYANwBkAGEAYgA2ADgAYQA0ADYA
ZQBlAGUAMABkADAANgA0ADUALgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBhADgANAA2AGQAZAA1ADUAZQA4ADQAZQA0ADYANwBkAGEA
YgA2ADgAYQA0ADYAZQBlAGUAMABkADAANgA0ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AYQA4ADQANgBkAGQANQA1AGUAOAA0AGUANAA2ADcAZABhAGIA
NgA4AGEANAA2AGUAZQBlADAAZAAwADYANAA1AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADMAMAA2AC4AMgA3ADYANgAwAAAAAABGAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADMAMAA2AC4AMgA3ADYANgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{ACC81E3C-19FD-4922-9D9E-281D0D58008B}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{E29C276D-22AE-4F9B-957E-4ABCC7CD6E60}"
          DTS:From="Package\Foreach Loop Container\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Data Flow Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{950BF12D-2136-47FC-A870-152AF3E9EEF2}"
          DTS:From="Package\Foreach Loop Container\Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Execute SQL Task 1" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FA819977-9DC1-4077-A8E4-66677BA69C4D}"
          DTS:ObjectName="{FA819977-9DC1-4077-A8E4-66677BA69C4D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FullFilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{E91D5FEA-E810-493F-9275-FE0A5AC257AD}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{D4735C12-AAFF-42C3-955D-60D211636B5C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{43E5D2BA-6516-46FF-9C6D-1909A9A60B01}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO ErrorLog (ErrorTimeUtc, ComponentName, ErrorMessage) " +
"VALUES (GETUTCDATE(), '" + @[System::PackageName] + "', '" +  @[System::ErrorDescription] + "')"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{369D2BE2-2146-477D-8145-7FFBF1E367AA}"
              SQLTask:SqlStatementSource="INSERT INTO ErrorLog (ErrorTimeUtc, ComponentName, ErrorMessage) VALUES (GETUTCDATE(), 'Package', '')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Execute SQL Task 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{70ea1f0b-340e-47f2-a25f-b72a36bded04}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) " +
"VALUES ('Error', '" + @[System::PackageName] + "', 'Clients', 0, GETDATE(), '" + @[System::MachineName] + "', '" + @[User::FileName] + "', '" + @[User::RootFolder] + "')"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BC74F06B-ABEA-46EC-9860-1C6931636721}"
              SQLTask:SqlStatementSource="INSERT INTO AuditLog (MessageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, SheetName) VALUES ('Error', 'Package', 'Clients', 0, GETDATE(), 'LAPTOP-66HI94H2', 'Evashan', 'C:\Timesheet\Evashan\')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0850EC7E-FF98-44F2-9F3D-7EB6641FE5B9}"
          DTS:From="Package.EventHandlers[OnError]\Execute SQL Task 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Execute SQL Task" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="67.29998347213,173.133331712154" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="65.5999792377162,5.5" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Foreach Loop Container\Execute SQL Task"
          TopLeft="57.1999732275821,98.8666651780738" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="130.799979237716,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.79999398986584,51.7666651780738"
              Start="0,0"
              End="8.79999398986584,44.2666651780738">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.8833325890369" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.8833325890369"
                    Point2="0,25.8833325890369"
                    Point3="4,25.8833325890369" />
                  <mssgle:LineSegment
                    End="4.79999398986584,25.8833325890369" />
                  <mssgle:CubicBezierSegment
                    Point1="4.79999398986584,25.8833325890369"
                    Point2="8.79999398986584,25.8833325890369"
                    Point3="8.79999398986584,29.8833325890369" />
                  <mssgle:LineSegment
                    End="8.79999398986584,44.2666651780738" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="141.049978349856,140.466665178074">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.6666665340803"
              Start="0,0"
              End="0,25.1666665340803">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.1666665340803" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="173.6,41.6"
          Id="Package\Foreach Loop Container\Execute SQL Task 1"
          TopLeft="56.3666399397799,256.53333089855" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="142.833311705955,214.733331712154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.7999991863963"
              Start="0,0"
              End="0,34.2999991863963">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.2999991863963" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="276,352.8"
          Size="276,396"
          Id="Package\Foreach Loop Container"
          TopLeft="432.500000546376,78.1999998734395" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="173.6,41.6"
          Id="Package.EventHandlers[OnError]\Execute SQL Task 1"
          TopLeft="301.666650184327,12.1333332489597" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package.EventHandlers[OnError]\Execute SQL Task"
          TopLeft="296.666650457515,111.799999222557" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="388.466650184327,53.7333332489597">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.3999997268121,58.0666659735971"
              Start="0,0"
              End="-9.3999997268121,50.5666659735971">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.0333329867986" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.0333329867986"
                    Point2="0,29.0333329867986"
                    Point3="-4,29.0333329867986" />
                  <mssgle:LineSegment
                    End="-5.3999997268121,29.0333329867986" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.3999997268121,29.0333329867986"
                    Point2="-9.3999997268121,29.0333329867986"
                    Point3="-9.3999997268121,33.0333329867986" />
                  <mssgle:LineSegment
                    End="-9.3999997268121,50.5666659735971" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column"
          TopLeft="325.833315530586,201.066665268474" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup"
          TopLeft="105.833327550855,291.799998354713" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Excel Source"
          TopLeft="315.833316076962,52.8666662990385" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
          TopLeft="315.119030401702,455.799996980627" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Conditional Split"
          TopLeft="397.499978281559,313.666664997273" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Data Conversion"
          TopLeft="312.499982925754,156.866665575835" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Fuzzy Lookup Output]"
          TopLeft="249.033327550855,312.599998354713">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="148.466650730704,21.8666666425601"
              Start="0,0"
              End="140.966650730704,21.8666666425601">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="70.2333253653518,0" />
                  <mssgle:CubicBezierSegment
                    Point1="70.2333253653518,0"
                    Point2="74.2333253653518,0"
                    Point3="74.2333253653518,4" />
                  <mssgle:LineSegment
                    End="74.2333253653518,17.8666666425601" />
                  <mssgle:CubicBezierSegment
                    Point1="74.2333253653518,17.8666666425601"
                    Point2="74.2333253653518,21.8666666425601"
                    Point3="78.2333253653518,21.8666666425601" />
                  <mssgle:LineSegment
                    End="140.966650730704,21.8666666425601" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="388.166649501358,94.4666662990385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.3999992767965"
              Start="0,0"
              End="0,54.8999992767965">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.8999992767965" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="402.233315530586,242.666665268474">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-224.799987979731,49.1333330862393"
              Start="0,0"
              End="-224.799987979731,41.6333330862393">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5666665431197" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5666665431197"
                    Point2="0,24.5666665431197"
                    Point3="-4,24.5666665431197" />
                  <mssgle:LineSegment
                    End="-220.799987979731,24.5666665431197" />
                  <mssgle:CubicBezierSegment
                    Point1="-220.799987979731,24.5666665431197"
                    Point2="-224.799987979731,24.5666665431197"
                    Point3="-224.799987979731,28.5666665431197" />
                  <mssgle:LineSegment
                    End="-224.799987979731,41.6333330862393" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-127.853587739865,29.5666665431197,30.9071875,9.568359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="312.499982925754,177.666665575835">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.333332604832,44.199999692639"
              Start="0,0"
              End="5.83333260483198,44.199999692639">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,40.199999692639" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,40.199999692639"
                    Point2="-22.5,44.199999692639"
                    Point3="-18.5,44.199999692639" />
                  <mssgle:LineSegment
                    End="5.83333260483198,44.199999692639" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Conditional Split Default Output]"
          TopLeft="474.299978281559,355.266664997273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73.5809478798564,100.533331983354"
              Start="0,0"
              End="-73.5809478798564,93.0333319833539">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.2666659916769" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.2666659916769"
                    Point2="0,50.2666659916769"
                    Point3="-4,50.2666659916769" />
                  <mssgle:LineSegment
                    End="-69.5809478798564,50.2666659916769" />
                  <mssgle:CubicBezierSegment
                    Point1="-69.5809478798564,50.2666659916769"
                    Point2="-73.5809478798564,50.2666659916769"
                    Point3="-73.5809478798564,54.2666659916769" />
                  <mssgle:LineSegment
                    End="-73.5809478798564,93.0333319833539" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.404380189928,55.2666659916769,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\Fuzzy Lookup">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Execute SQL Task 1.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="173.6,41.6"
          Id="Package\Foreach Loop Container\Execute SQL Task 1.EventHandlers[OnError]\Execute SQL Task 3"
          TopLeft="196.999997958541,86.9999995976686" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>